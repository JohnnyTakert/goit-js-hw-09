{"version":3,"file":"index.js","sources":["../src/js/formData.js","../src/js/domUtils.js","../src/js/2-form.js"],"sourcesContent":["export const formData = {\n  email: '',\n  message: '',\n};\n\nexport function saveToLocalStorage(data) {\n  try {\n    localStorage.setItem('feedback-form-state', JSON.stringify(data));\n  } catch (error) {\n    console.error('Error saving to localStorage', error);\n  }\n}\n\nexport function loadFromLocalStorage() {\n  try {\n    const savedData = localStorage.getItem('feedback-form-state');\n    return savedData ? JSON.parse(savedData) : null;\n  } catch (error) {\n    console.error('Error loading from localStorage', error);\n    return null;\n  }\n}\n","export function updateFormFields(data) {\n  try {\n    document.querySelector('input[name=\"email\"]').value = data.email;\n    document.querySelector('textarea[name=\"message\"]').value = data.message;\n  } catch (error) {\n    console.error('Error updating form fields', error);\n  }\n}\n\nexport function resetForm(target) {\n  try {\n    target.reset();\n  } catch (error) {\n    console.error('Error resetting form', error);\n  }\n}\n","import {\n  formData,\n  saveToLocalStorage,\n  loadFromLocalStorage,\n} from './formData.js';\nimport { updateFormFields, resetForm } from './domUtils.js';\n\ndocument.querySelector('.feedback-form').addEventListener('input', event => {\n  try {\n    const { name, value } = event.target;\n    formData[name] = value;\n    saveToLocalStorage(formData);\n  } catch (error) {\n    console.error('Error handling input event', error);\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  try {\n    const savedData = loadFromLocalStorage();\n    if (savedData) {\n      Object.assign(formData, savedData);\n      updateFormFields(formData);\n    }\n  } catch (error) {\n    console.error('Error on DOMContentLoaded', error);\n  }\n});\n\ndocument.querySelector('.feedback-form').addEventListener('submit', event => {\n  event.preventDefault();\n  try {\n    if (!formData.email || !formData.message) {\n      alert('Fill please all fields');\n      return;\n    }\n    console.log(formData);\n    localStorage.removeItem('feedback-form-state');\n    formData.email = '';\n    formData.message = '';\n    resetForm(event.target);\n  } catch (error) {\n    console.error('Error handling form submission', error);\n  }\n});\n"],"names":["formData","saveToLocalStorage","data","error","loadFromLocalStorage","savedData","updateFormFields","resetForm","target","event","name","value"],"mappings":"0uBAAO,MAAMA,EAAW,CACtB,MAAO,GACP,QAAS,EACX,EAEO,SAASC,EAAmBC,EAAM,CACvC,GAAI,CACF,aAAa,QAAQ,sBAAuB,KAAK,UAAUA,CAAI,CAAC,CACjE,OAAQC,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,CACpD,CACH,CAEO,SAASC,GAAuB,CACrC,GAAI,CACF,MAAMC,EAAY,aAAa,QAAQ,qBAAqB,EAC5D,OAAOA,EAAY,KAAK,MAAMA,CAAS,EAAI,IAC5C,OAAQF,EAAO,CACd,eAAQ,MAAM,kCAAmCA,CAAK,EAC/C,IACR,CACH,CCrBO,SAASG,EAAiBJ,EAAM,CACrC,GAAI,CACF,SAAS,cAAc,qBAAqB,EAAE,MAAQA,EAAK,MAC3D,SAAS,cAAc,0BAA0B,EAAE,MAAQA,EAAK,OACjE,OAAQC,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CAClD,CACH,CAEO,SAASI,EAAUC,EAAQ,CAChC,GAAI,CACFA,EAAO,MAAK,CACb,OAAQL,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC5C,CACH,CCRA,SAAS,cAAc,gBAAgB,EAAE,iBAAiB,QAASM,GAAS,CAC1E,GAAI,CACF,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC9BT,EAASU,CAAI,EAAIC,EACjBV,EAAmBD,CAAQ,CAC5B,OAAQG,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CAClD,CACH,CAAC,EAED,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,GAAI,CACF,MAAME,EAAYD,IACdC,IACF,OAAO,OAAOL,EAAUK,CAAS,EACjCC,EAAiBN,CAAQ,EAE5B,OAAQG,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,CACjD,CACH,CAAC,EAED,SAAS,cAAc,gBAAgB,EAAE,iBAAiB,SAAUM,GAAS,CAC3EA,EAAM,eAAc,EACpB,GAAI,CACF,GAAI,CAACT,EAAS,OAAS,CAACA,EAAS,QAAS,CACxC,MAAM,wBAAwB,EAC9B,MACD,CACD,QAAQ,IAAIA,CAAQ,EACpB,aAAa,WAAW,qBAAqB,EAC7CA,EAAS,MAAQ,GACjBA,EAAS,QAAU,GACnBO,EAAUE,EAAM,MAAM,CACvB,OAAQN,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,CACtD,CACH,CAAC"}